% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/crop_hex_grid.R
\name{tile_raster}
\alias{tile_raster}
\title{Tile a Raster into a Grid of Polygons}
\usage{
tile_raster(
  raster_layer,
  grid_area,
  grid_shape,
  out_dir = NULL,
  plot_grid = FALSE,
  prompt_user = TRUE,
  acceptable_coverage = 0.5,
  write_grid = TRUE
)
}
\arguments{
\item{raster_layer}{A \code{SpatRaster} object from the \code{terra} package to be tiled.}

\item{grid_area}{Numeric. The target area for each grid cell in the square
meters of the raster's CRS.}

\item{grid_shape}{Character. The shape of the grid cells. Must be either
\code{"square"} or \code{"hexagon"}.}

\item{out_dir}{Character. Optional path to a directory where the output raster
tiles and grid geopackage will be saved. If \code{NULL}, no files are written.}

\item{plot_grid}{Logical. If \code{TRUE}, displays a plot of the generated grid
overlaid on the raster for review before processing.}

\item{prompt_user}{Logical. If \code{TRUE} and \code{plot_grid} is \code{TRUE}, the function
will pause and ask for user confirmation before proceeding to tile the raster.}

\item{acceptable_coverage}{Numeric. A value between 0 and 1 representing the
minimum proportional overlap a grid cell must have with the raster's extent
to be processed. Defaults to \code{0.5} (50\%).}

\item{write_grid}{Logical. If \code{TRUE} and \code{out_dir} is specified, the grid
polygons will be saved as a geopackage in the output directory.}
}
\value{
A list containing two elements:
\describe{
\item{raster_tiles}{A named list of \code{SpatRaster} objects, where each element is a
tiled portion of the input raster. The names of the list elements
correspond to the unique \code{grid_id} of each cell.}
\item{grid}{An \code{sf} object containing the grid polygons used for tiling.}
}
}
\description{
This function creates a grid of square or hexagonal polygons over the extent
of a source raster. It then iterates through each grid cell, cropping and
masking the source raster to create individual raster tiles.
}
\examples{
\dontrun{
if (requireNamespace("lidR", quietly = TRUE)) {

  # Create and tile a 1m CHM from the Megaplot.laz
 output <- system.file("extdata", "Megaplot.laz", package = "lidR") \%>\%
   lidR::readLAS() \%>\%
   lidR::rasterize_canopy(res = 1, algorithm = lidR::p2r(subcircle = 0.25)) \%>\%
   tile_raster(
     grid_area   = 900,         # 30x30m tiles
     grid_shape  = "square",
     acceptable_coverage = 0.95,
     out_dir     = NULL,        # Don't write files to disk
     plot_grid   = FALSE,       # Don't show a plot
     write_grid  = FALSE,
     prompt_user = FALSE
   )

  # Check the raster output (a list of SpatRasters)
  print(output$raster_tiles[[1]])

  # Check the grid polygon output
  print(head(output$grid))
}
}
}
